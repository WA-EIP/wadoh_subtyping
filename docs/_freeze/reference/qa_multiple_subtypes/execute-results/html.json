{
  "hash": "84251e0d5c21a2e6d361a682f8b58766",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: qa_multiple_subtypes\n---\n\n\n\n```python\nqa.qa_multiple_subtypes(\n    wdrs_res_sum_output: str,\n    test_res_output: str,\n    wdrs_res_output: str,\n    transformed_df_inp: pl.DataFrame,\n)\n```\n\nQA multiple_subtypes\n\n## Usage {.doc-section .doc-section-usage}\n\nTo be used on a pl.DataFrame. Sometimes LIMS labels two different subtypes as `Detected`\nfor the same specimen. For example, one specimen may be labeled as `H3` detected _and_ `H1N1`\ndetected. This shouldn't happen. The `qa_multiple_subtypes2` function will flag these records\nfor further review.\n\n## Parameters {.doc-section .doc-section-parameters}\n\n<code>[**wdrs_res_sum_output**]{.parameter-name} [:]{.parameter-annotation-sep} [str]{.parameter-annotation}</code>\n\n:   wdrs result summary output col from transformation functions\n\n<code>[**test_res_output**]{.parameter-name} [:]{.parameter-annotation-sep} [str]{.parameter-annotation}</code>\n\n:   test result output col from transformation functions\n\n<code>[**wdrs_res_output**]{.parameter-name} [:]{.parameter-annotation-sep} [str]{.parameter-annotation}</code>\n\n:   wdrs result output col from transformation functions\n\n<code>[**transformed_df_inp**]{.parameter-name} [:]{.parameter-annotation-sep} [pl.DataFrame]{.parameter-annotation}</code>\n\n:   transformed dataframe\n\n## Examples {.doc-section .doc-section-examples}\n\n\n\n\nHere is the transformed dataframe that contains a record with multiple subtypes \n(when it should only have one subtype)\n\n::: {#d3c56537 .cell execution_count=2}\n``` {.python .cell-code}\nfrom wadoh_subtyping import qa\nfrom wadoh_raccoon.utils import helpers\nimport polars as pl\n\ntransformed_df = pl.DataFrame({\n    \"submission_number\": ['200','200'],\n    \"wdrs_res_sum_output\": [\n        \"G_POSITIVE\",\n        \"G_POSITIVE\"\n    ],\n    \"test_res_output\": [\n        \"Influenza A (09 Pdm H1N1) detected\",\n        \"Influenza A (H3) detected\"\n    ],\n    \"wdrs_res_output\": [\n        \"G_FLU_A_(09_PDM_H1N1)_D\",\n        \"G_FLU_A_(H3)_D\"\n    ]\n})\n```\n:::\n\n\nApply the function\n\n::: {#2257f5ad .cell execution_count=3}\n``` {.python .cell-code}\nqa_mult_subtypes = (\n    qa.qa_multiple_subtypes(\n        transformed_df_inp=transformed_df,\n        wdrs_res_sum_output='wdrs_res_sum_output',\n        test_res_output='test_res_output',\n        wdrs_res_output='wdrs_res_output'\n    )\n)\n```\n:::\n\n\n::: {#31e99809 .cell execution_count=4}\n\n::: {.cell-output .cell-output-display execution_count=4}\n```{=html}\n<div id=\"geuqbdtkxj\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>\n@import url('https://fonts.googleapis.com/css2?family=JetBrains+Mono&display=swap');\n#geuqbdtkxj table {\n          font-family: 'JetBrains Mono', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;\n          -webkit-font-smoothing: antialiased;\n          -moz-osx-font-smoothing: grayscale;\n        }\n\n#geuqbdtkxj thead, tbody, tfoot, tr, td, th { border-style: none; }\n tr { background-color: transparent; }\n#geuqbdtkxj p { margin: 0; padding: 0; }\n #geuqbdtkxj .gt_table { display: table; border-collapse: collapse; line-height: normal; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 3px; border-top-color: #0c0909; border-right-style: solid; border-right-width: 3px; border-right-color: #0c0909; border-bottom-style: solid; border-bottom-width: 3px; border-bottom-color: #0c0909; border-left-style: solid; border-left-width: 3px; border-left-color: #0c0909; }\n #geuqbdtkxj .gt_caption { padding-top: 4px; padding-bottom: 4px; }\n #geuqbdtkxj .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; }\n #geuqbdtkxj .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 3px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; }\n #geuqbdtkxj .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; }\n #geuqbdtkxj .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; }\n #geuqbdtkxj .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; }\n #geuqbdtkxj .gt_col_heading { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; }\n #geuqbdtkxj .gt_column_spanner_outer { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; }\n #geuqbdtkxj .gt_column_spanner_outer:first-child { padding-left: 0; }\n #geuqbdtkxj .gt_column_spanner_outer:last-child { padding-right: 0; }\n #geuqbdtkxj .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; }\n #geuqbdtkxj .gt_spanner_row { border-bottom-style: hidden; }\n #geuqbdtkxj .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; text-align: left; }\n #geuqbdtkxj .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; }\n #geuqbdtkxj .gt_from_md> :first-child { margin-top: 0; }\n #geuqbdtkxj .gt_from_md> :last-child { margin-bottom: 0; }\n #geuqbdtkxj .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; }\n #geuqbdtkxj .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; }\n #geuqbdtkxj .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; }\n #geuqbdtkxj .gt_row_group_first td { border-top-width: 2px; }\n #geuqbdtkxj .gt_row_group_first th { border-top-width: 2px; }\n #geuqbdtkxj .gt_striped { background-color: rgba(128,128,128,0.05); }\n #geuqbdtkxj .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; }\n #geuqbdtkxj .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; }\n #geuqbdtkxj .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; text-align: left; }\n #geuqbdtkxj .gt_left { text-align: left; }\n #geuqbdtkxj .gt_center { text-align: center; }\n #geuqbdtkxj .gt_right { text-align: right; font-variant-numeric: tabular-nums; }\n #geuqbdtkxj .gt_font_normal { font-weight: normal; }\n #geuqbdtkxj .gt_font_bold { font-weight: bold; }\n #geuqbdtkxj .gt_font_italic { font-style: italic; }\n #geuqbdtkxj .gt_super { font-size: 65%; }\n #geuqbdtkxj .gt_footnote_marks { font-size: 75%; vertical-align: 0.4em; position: initial; }\n #geuqbdtkxj .gt_asterisk { font-size: 100%; vertical-align: 0; }\n \n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n<thead>\n\n<tr class=\"gt_col_headings\">\n  <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" style=\"border-bottom: 2px solid black;\" scope=\"col\" id=\"test_res_output\">test_res_output</th>\n  <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" style=\"border-bottom: 2px solid black; background-color: #cbe2f9; font-weight: bold;\" scope=\"col\" id=\"qa_multiple_subtypes\">qa_multiple_subtypes</th>\n</tr>\n</thead>\n<tbody class=\"gt_table_body\">\n  <tr>\n    <td class=\"gt_row gt_left\">Influenza A (09 Pdm H1N1) detected</td>\n    <td style=\"background-color: #cbe2f9; font-weight: bold;\" class=\"gt_row gt_center\">true</td>\n  </tr>\n  <tr>\n    <td class=\"gt_row gt_left gt_striped\">Influenza A (H3) detected</td>\n    <td style=\"background-color: #cbe2f9; font-weight: bold;\" class=\"gt_row gt_center gt_striped\">true</td>\n  </tr>\n</tbody>\n\n\n</table>\n\n</div>\n        \n```\n:::\n:::\n\n\nSo now we can use this flag and filter the records out:\n\n::: {#686164d9 .cell execution_count=5}\n``` {.python .cell-code}\napply_qa = (\n    transformed_df\n    .with_columns(\n        pl.when(pl.col('submission_number').is_in(qa_mult_subtypes['submission_number']))\n        .then(True)\n        .otherwise(False)\n        .alias('qa_multiple_subtypes')\n    )\n)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nC:\\Users\\FAA3303\\AppData\\Local\\Temp\\ipykernel_56064\\3037358048.py:3: DeprecationWarning: `is_in` with a collection of the same datatype is ambiguous and deprecated.\nPlease use `implode` to return to previous behavior.\n\nSee https://github.com/pola-rs/polars/issues/22149 for more information.\n  .with_columns(\n```\n:::\n:::\n\n\n",
    "supporting": [
      "qa_multiple_subtypes_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}